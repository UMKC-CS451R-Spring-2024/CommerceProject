@page "/dashboard"
@inject HttpClient Http

<PageTitle>Dashboard</PageTitle>


@if(userAccounts == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="jumbotron">
        <h1 class="display-4">Hello, @userAccounts[0].AccountName</h1>
        <hr class="my-4">
        <h1> <span class="badge bg-secondary">Total Investments: $@GetTotalInvestedAmount(userAccounts[0]).ToString("N0")</span></h1>
        <br />

        <h2>Accounts:</h2>
        <div class="account-table-and-graph">
            <table class="account-table table table-borderless">
                <tbody class="account-table">
                    @foreach(Accounts account in userAccounts[0].Accounts)
                    {
                        <tr>
                            <th style="background-color: rgb(240,240,240);" scope="row"></th>
                            <td style="background-color: rgb(240,240,240);">@account.AccountType <br />@account.AccountNumber</td>
                            <td style="background-color: rgb(240,240,240);">$@account.AccountAmount.ToString("N0")</td>
                        </tr>
                        
                    }
                    
                </tbody>
            </table>

            <div class="d-flex" style="height: 250px;">
                <div class="vr"></div>
            </div>

            <Client.Components.PastYearInvestmentsGraph AccountInfo="userAccounts[0]" />

        </div>



        <div class="accounts-button">
            <button type="button" class="btn btn-primary">View Accounts</button>
        </div>

    </div> <!--jumbtron class-->

    <br />
    <br />

    <div class="bottom-half-cards">

        <div class="card">
            <div class="card-body">
                <h5 class="card-title">Account Activity</h5>
                <table class="table">
                    <thead>
                        <tr>
                            <th scope="col">Date</th>
                            <th scope="col">Account</th>
                            <th scope="col">Type</th>
                            <th scope="col">Amount</th>
                        </tr>
                    </thead>
                    <tbody>
                        <tr>
                            <th scope="row">1/12/24</th>
                            <td>Roth IRA</td>
                            <td>Program Fee</td>
                            <td>-$25.00</td>
                        </tr>
                        <tr>
                            <th scope="row">1/31/24</th>
                            <td>Roth IRA</td>
                            <td>Monthly Contribution</td>
                            <td>$500.00</td>
                        </tr>

                    </tbody>
                </table>
                <button type="button" class="btn btn-primary card-link">View Activity</button>
            </div>

        </div> <!-- Account Activity card-->

        <div class="card" style="width: 18rem;">
            <div class="card-body">
                <h5 class="card-title">Stocks</h5>
                <button type="button" class="btn btn-primary card-link">View Stocks and Market Activity</button>
            </div>
        </div>

        <div class="card" style="width: 18rem;">
            <div class="card-body">
                <h5 class="card-title">My Financial Advisor</h5>
                <h5>(Insert Some Name Here)</h5>
                <button type="button" class="btn btn-primary card-link">Send a Message</button>
            </div>
        </div>

    </div>
    
}



@code {
    private AccountInformation[]? userAccounts;

    protected override async Task OnInitializedAsync()
    {
        userAccounts = await Http.GetFromJsonAsync<AccountInformation[]>("sample-data/accountMockData.json");
    }

    public double GetTotalInvestedAmount(AccountInformation userAccount)
    {
        double total = 0;

        foreach(Accounts account in userAccount.Accounts)
        {
            total += account.AccountAmount;
        }

        return total;
    }

   

}
