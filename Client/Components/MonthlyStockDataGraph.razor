@using BlazorBootstrap
@using Color = System.Drawing.Color

<LineChart @ref="lineChart" Width="800" Height="400" Class="mb-4" />

@code {
    private LineChart lineChart = default!;
    private LineChartOptions lineChartOptions = default!;
    private ChartData chartData = default!;

    protected override void OnInitialized()
    {
        var colors = ColorBuilder.CategoricalTwelveColors;

        // var labels = GetXAxisLabels();
        var datasets = new List<IChartDataset>();
        var monthlyHighs = MonthlyStockData.Values.ToList().GetRange(0,12);


        var dataset1 = new LineChartDataset()
            {
                Label = "Daily Highest Stock Prices from the last year",
                Data = monthlyHighs,
                BackgroundColor = new List<string> { colors[0] },
                BorderColor = new List<string> { colors[0] },
                BorderWidth = new List<double> { 2 },
                HoverBorderWidth = new List<double> { 4 },
                PointBackgroundColor = new List<string> { colors[0] },
                PointRadius = new List<int> { 0 }, // hide points
                PointHoverRadius = new List<int> { 4 },
            };
        datasets.Add(dataset1);

        chartData = new ChartData
            {
                Labels = MonthlyStockData.Keys.Select(x => x.ToString("yyyy-MM-dd")).ToList(),
                Datasets = datasets
            };

        lineChartOptions = new();
        lineChartOptions.Responsive = true;
        lineChartOptions.Interaction = new Interaction { Mode = InteractionMode.Index };

        lineChartOptions.Scales.X.Title.Text = "Dates";
        lineChartOptions.Scales.X.Title.Display = true;

        lineChartOptions.Scales.Y.Title.Text = "Stock Price USD";
        lineChartOptions.Scales.Y.Title.Display = true;
        lineChartOptions.Scales.Y.Min = monthlyHighs.Min();

        lineChartOptions.Plugins.Title.Text = "Highest Stock Price";
        lineChartOptions.Plugins.Title.Display = true;
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await lineChart.InitializeAsync(chartData, lineChartOptions);
        }
        await base.OnAfterRenderAsync(firstRender);
    }



    [Parameter]
    public IDictionary<DateOnly, double> MonthlyStockData { get; set; }

}
